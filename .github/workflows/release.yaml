name: Releases

on:
  workflow_dispatch:
  push:
    tags:  
        - 'v*'

permissions:
  contents: write

jobs:
  relase_linux:
    name: "Release for ${{matrix.os}}"
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: sudo apt install libatk1.0-dev pkg-config libgtk-3-dev

      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Build
        run: |
          cargo build --release --locked
          mv target/release/easy_flash_daplink easy_flash_daplink

      - name: Create Linux archive /w XPack OpenOCD
        run: |
          curl -LO https://github.com/xpack-dev-tools/openocd-xpack/releases/download/v0.12.0-4/xpack-openocd-0.12.0-4-linux-x64.tar.gz
          tar xzf xpack-openocd-0.12.0-4-linux-x64.tar.gz
          mkdir linux
          cp easy_flash_daplink linux/
          mv xpack-openocd-0.12.0-4/bin/* linux/
          mv xpack-openocd-0.12.0-4/openocd/scripts/ linux/
          7z a linux.zip linux/*
        
      - name: Prepare artifacts
        run: |
          mkdir artifacts
          mv easy_flash_daplink artifacts/easy_flash_daplink-${{github.ref_name}}.exe
          mv linux.zip artifacts/easy_flash_daplink-${{github.ref_name}}-linux_${{matrix.os}}.zip

      - name: Publish artifacts
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          file_glob: true
          tag: ${{ github.ref }}

  relase_windows:
    name: "Release for Windows"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install packages
        run: sudo apt install libatk1.0-dev pkg-config libgtk-3-dev

      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - name: Install cross
        run: cargo install cross

      - name: Build
        run: |
          cross build --target x86_64-pc-windows-gnu --release --locked
          mv target/x86_64-pc-windows-gnu/release/easy_flash_daplink.exe easy_flash_daplink.exe

      - name: Create Windows archive /w XPack OpenOCD
        run: |
          curl -LO https://github.com/xpack-dev-tools/openocd-xpack/releases/download/v0.12.0-4/xpack-openocd-0.12.0-4-win32-x64.zip
          unzip xpack-openocd-0.12.0-4-win32-x64.zip
          mkdir windows
          cp easy_flash_daplink.exe windows/
          mv xpack-openocd-0.12.0-4/bin/* windows/
          mv xpack-openocd-0.12.0-4/openocd/scripts/ windows/
          7z a windows.zip windows/*
        
      - name: Prepare artifacts
        run: |
          mkdir artifacts
          mv easy_flash_daplink.exe artifacts/easy_flash_daplink-${{github.ref_name}}.exe
          mv windows.zip artifacts/easy_flash_daplink-${{github.ref_name}}-windows.zip

      - name: Publish artifacts
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/*
          file_glob: true
          tag: ${{ github.ref }}